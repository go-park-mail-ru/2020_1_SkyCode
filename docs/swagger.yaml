basePath: /api/v1
definitions:
  delivery.changePasswordRequest:
    properties:
      newPassword:
        type: string
    required:
    - newPassword
    type: object
  delivery.changePhoneNumberRequest:
    properties:
      newPhone:
        type: string
    required:
    - newPhone
    type: object
  delivery.editBioRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - firstName
    - lastName
    type: object
  delivery.orderRequest:
    properties:
      address:
        type: string
      comment:
        type: string
      personNum:
        type: integer
      phone:
        type: string
      price:
        type: number
      products:
        items:
          $ref: '#/definitions/models.OrderProduct'
        type: array
      userId:
        type: integer
    required:
    - address
    - personNum
    - phone
    - price
    - products
    - userId
    type: object
  delivery.productRequest:
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  delivery.restaurantRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  delivery.signInRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  delivery.signUpRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - firstName
    - lastName
    - password
    - phone
    type: object
  models.Order:
    properties:
      address:
        type: string
      comment:
        type: string
      id:
        type: integer
      person_num:
        type: integer
      phone:
        type: string
      price:
        type: number
      products:
        items:
          $ref: '#/definitions/models.OrderProduct'
        type: array
      user_id:
        type: integer
    type: object
  models.OrderProduct:
    properties:
      count:
        type: integer
      id:
        type: integer
      orderId:
        type: integer
      productId:
        type: integer
    required:
    - count
    - productId
    type: object
  models.Product:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: number
      rest_id:
        type: integer
    type: object
  models.Restaurant:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      managerId:
        type: integer
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      rating:
        type: number
    type: object
  models.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      profile_photo:
        type: string
      role:
        type: string
    type: object
  tools.Error:
    properties:
      error:
        type: string
    type: object
  tools.Message:
    properties:
      message:
        type: object
    type: object
host: localhost:5000
info:
  contact:
    name: API Support
  description: This is a SkyDelivery server for Technopark Project.
  license: {}
  title: Swagger SkyDelivery API
  version: "1.0"
paths:
  /logout:
    post:
      consumes:
      - application/json
      description: Logouting user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Logout Route
      tags:
      - Session
  /orders:
    get:
      consumes:
      - application/json
      description: Creating Order
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Create Order Route
      tags:
      - Order
  /orders/:order_id:
    delete:
      consumes:
      - application/json
      description: Creating Order
      parameters:
      - description: ID of order
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Create Order Route
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Creating Order
      parameters:
      - description: ID of order
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Create Order Route
      tags:
      - Order
  /orders/checkout:
    post:
      consumes:
      - application/json
      description: Creating Order
      parameters:
      - description: New order data
        in: body
        name: OrderReq
        required: true
        schema:
          $ref: '#/definitions/delivery.orderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Create Order Route
      tags:
      - Order
  /product/:prod_id:
    delete:
      consumes:
      - application/json
      description: Updating Product Image
      parameters:
      - description: Product ID
        in: path
        name: prod_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Update Product Image Route
      tags:
      - Product
  /product/:prod_id/image:
    put:
      consumes:
      - multipart/form-data
      description: Updating Product Image
      parameters:
      - description: Product ID
        in: path
        name: prod_id
        required: true
        type: integer
      - description: New product image
        in: formData
        name: ProdReq
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Update Product Image Route
      tags:
      - Product
  /product/:prod_id/update:
    put:
      consumes:
      - application/json
      description: Updating Product
      parameters:
      - description: Product ID
        in: path
        name: prod_id
        required: true
        type: integer
      - description: New product data
        in: body
        name: ProdReq
        required: true
        schema:
          $ref: '#/definitions/delivery.productRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Update Product Route
      tags:
      - Product
  /product/prod:id:
    get:
      consumes:
      - application/json
      description: Returning Product Model
      parameters:
      - description: Product ID
        in: path
        name: prod_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Get Product Route
      tags:
      - Product
  /profile:
    get:
      consumes:
      - application/json
      description: Getting Profile Of User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Get Profile Route
      tags:
      - User
  /profile/avatar:
    put:
      consumes:
      - multipart/form-data
      description: Changing Avatar Of User
      parameters:
      - description: New avatar of user
        in: formData
        name: '"image"'
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Edit Avatar Route
      tags:
      - User
  /profile/bio:
    put:
      consumes:
      - application/json
      description: Editing bio data of user
      parameters:
      - description: Bio data of user
        in: body
        name: '"bioReq"'
        required: true
        schema:
          $ref: '#/definitions/delivery.editBioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Edit Bio Route
      tags:
      - User
  /profile/password:
    put:
      consumes:
      - application/json
      description: Changing password of user
      parameters:
      - description: New password
        in: body
        name: '"password"'
        required: true
        schema:
          $ref: '#/definitions/delivery.changePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Change Password Route
      tags:
      - User
  /profile/phone:
    put:
      consumes:
      - application/json
      description: Changing Phone Number Of User
      parameters:
      - description: New phone number of user
        in: body
        name: '"phone"'
        required: true
        schema:
          $ref: '#/definitions/delivery.changePhoneNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      security:
      - basicAuth: []
      summary: Change Phone Number Route
      tags:
      - User
  /restaurants:
    get:
      consumes:
      - application/json
      description: Returning list of all restaurants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Restaurant'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Get Restaurants List Route
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: Add new restaurant
      parameters:
      - description: New restaurant name
        in: formData
        name: Name
        required: true
        type: string
      - description: New restaurant price
        in: formData
        name: Description
        required: true
        type: string
      - description: New restaurant image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Create New Restaurant Route
      tags:
      - Restaurant
  /restaurants/:rest_id:
    delete:
      consumes:
      - application/json
      description: Deleting Restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: rest_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Delete Restaurant Route
      tags:
      - Restaurant
    get:
      consumes:
      - application/json
      description: Returning Restaurant Model
      parameters:
      - description: Restaurant ID
        in: path
        name: rest_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Get Restaurant By ID Route
      tags:
      - Restaurant
  /restaurants/:rest_id/image:
    put:
      consumes:
      - application/json
      description: Updating Restaurant Image
      parameters:
      - description: Restaurant ID
        in: path
        name: rest_id
        required: true
        type: integer
      - description: New restaurant image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Update Restaurant Image Route
      tags:
      - Restaurant
  /restaurants/:rest_id/update:
    put:
      consumes:
      - application/json
      description: Updating Restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: rest_id
        required: true
        type: integer
      - description: New restaurant data
        in: body
        name: RestReq
        required: true
        schema:
          $ref: '#/definitions/delivery.restaurantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Update Restaurant Route
      tags:
      - Restaurant
  /restaurants/rest:id/product:
    get:
      consumes:
      - application/json
      description: Returning Products List of Restaurant
      parameters:
      - description: Id of restaurant
        in: path
        name: rest_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Get Products Of Restaurant Route
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Creating Product
      parameters:
      - description: Restaurant ID
        in: path
        name: rest_id
        required: true
        type: integer
      - description: New product name
        in: formData
        name: Name
        required: true
        type: string
      - description: New product price
        in: formData
        name: Price
        required: true
        type: number
      - description: New product image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Create Product Route
      tags:
      - Product
  /signin:
    post:
      consumes:
      - application/json
      description: Signing in user
      parameters:
      - description: User data
        in: body
        name: SignInReq
        required: true
        schema:
          $ref: '#/definitions/delivery.signInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Sign In Route
      tags:
      - Session
  /signup:
    post:
      consumes:
      - application/json
      description: Signing up
      parameters:
      - description: New user data
        in: body
        name: '"SignUpReq"'
        required: true
        schema:
          $ref: '#/definitions/delivery.signUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tools.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/tools.Error'
      summary: Sign Up Route
      tags:
      - User
swagger: "2.0"

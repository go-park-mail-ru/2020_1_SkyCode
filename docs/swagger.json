{
    "swagger": "2.0",
    "info": {
        "description": "This is a SkyDelivery server for Technopark Project.",
        "title": "Swagger SkyDelivery API",
        "contact": {
            "name": "API Support"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/restaurants": {
            "get": {
                "description": "Returning list of all restaurants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Get Restaurants List Route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Restaurant"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Create New Restaurant Route",
                "parameters": [
                    {
                        "description": "New restaurant data",
                        "name": "RestReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.restaurantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/:rest_id": {
            "get": {
                "description": "Returning restaurant model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Get Restaurant By ID Route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Restaurant id",
                        "name": "rest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting Restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Delete Restaurant Route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of restaurant",
                        "name": "rest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/:rest_id/image": {
            "put": {
                "description": "Updating Restaurant Image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Update Restaurant Image Route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of restaurant",
                        "name": "rest_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "New restaurant image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/:rest_id/update": {
            "put": {
                "description": "Updating Restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Update Restaurant Route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of restaurant",
                        "name": "rest_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New restaurant data",
                        "name": "RestReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.restaurantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tools.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.restaurantRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "rest_id": {
                    "type": "integer"
                }
            }
        },
        "models.Restaurant": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "tools.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "tools.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "object"
                }
            }
        }
    }
}
// Code generated by MockGen. DO NOT EDIT.
// Source: ../repository.go

// Package mock_chats is a generated GoMock package.
package mock_chats

import (
	models "github.com/2020_1_Skycode/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// InsertChatMessage mocks base method
func (m *MockRepository) InsertChatMessage(message *models.ChatMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertChatMessage", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertChatMessage indicates an expected call of InsertChatMessage
func (mr *MockRepositoryMockRecorder) InsertChatMessage(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertChatMessage", reflect.TypeOf((*MockRepository)(nil).InsertChatMessage), message)
}

// SelectMessagesByChatID mocks base method
func (m *MockRepository) SelectMessagesByChatID(chatID string) ([]*models.ChatMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectMessagesByChatID", chatID)
	ret0, _ := ret[0].([]*models.ChatMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectMessagesByChatID indicates an expected call of SelectMessagesByChatID
func (mr *MockRepositoryMockRecorder) SelectMessagesByChatID(chatID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectMessagesByChatID", reflect.TypeOf((*MockRepository)(nil).SelectMessagesByChatID), chatID)
}

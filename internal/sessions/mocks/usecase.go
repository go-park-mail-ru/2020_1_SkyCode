// Code generated by MockGen. DO NOT EDIT.
// Source: ../usecase.go

// Package mock_sessions is a generated GoMock package.
package mock_sessions

import (
	models "github.com/2020_1_Skycode/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUseCase is a mock of UseCase interface
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// StoreSession mocks base method
func (m *MockUseCase) StoreSession(user *models.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreSession", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreSession indicates an expected call of StoreSession
func (mr *MockUseCaseMockRecorder) StoreSession(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreSession", reflect.TypeOf((*MockUseCase)(nil).StoreSession), user)
}

// DeleteSession mocks base method
func (m *MockUseCase) DeleteSession(sessionId uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSession", sessionId)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSession indicates an expected call of DeleteSession
func (mr *MockUseCaseMockRecorder) DeleteSession(sessionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSession", reflect.TypeOf((*MockUseCase)(nil).DeleteSession), sessionId)
}

// GetSession mocks base method
func (m *MockUseCase) GetSession(token string) (*models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession", token)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSession indicates an expected call of GetSession
func (mr *MockUseCaseMockRecorder) GetSession(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockUseCase)(nil).GetSession), token)
}

# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: build
      run: make build
    
    - name: Upload build result
      uses: actions/upload-artifact@v1
      with:
        name: bin
        path: ./bin
  tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        
      - name: tests
        run: go test -coverpkg=./internal/... ./internal/... -coverprofile cover.out && go tool cover -func cover.out | grep total
  
  deploy:
     runs-on: ubuntu-latest
     needs: build
     steps:
     - name: Download bin file
       uses: actions/download-artifact@v1
       with:
         name: bin
     - name: Transfer bin file to server
       uses: appleboy/scp-action@v0.0.10
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.DEPLOYKEY }}
         source: "bin/bin"
         target: "/home/ubuntu/"
     - name: chmod
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.DEPLOYKEY }}
         script: chmod 755 /home/ubuntu/bin
     - name: restart service
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.DEPLOYKEY }}
         script: ls -al
      
